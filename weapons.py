
# –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–µ–π–¥–∞ Rust –ø–æ —Å–µ—Ä–µ

# --- –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ä–µ–π–¥-—Ç–∞–±–ª–∏—Ü–∞ (–ø–æ —Å–µ—Ä–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤–∑—Ä—ã–≤–æ–≤) ---
raid_sulfur_table = {
    "–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è —Å—Ç–µ–Ω–∫–∞": {"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 3, "–¢–∏–ø": "–°–∞—á–µ–ª—å", "–°–µ—Ä–∞": 480*3},
    "–ö–∞–º–µ–Ω–Ω–∞—è —Å—Ç–µ–Ω–∫–∞": {"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 2, "–¢–∏–ø": "–°4", "–°–µ—Ä–∞": 2200*2},
    "–ú–µ—Ç–∞–ª–ª —Å—Ç–µ–Ω–∞": {"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 4, "–¢–∏–ø": "–°4", "–°–µ—Ä–∞": 2200*4},
    "–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –¥–≤–µ—Ä—å": {"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 2, "–¢–∏–ø": "–°–∞—á–µ–ª—å", "–°–µ—Ä–∞": 480*2},
    "–ñ–µ–ª–µ–∑–Ω–∞—è –¥–≤–µ—Ä—å": {"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 3, "–¢–∏–ø": "–°–∞—á–µ–ª—å", "–°–µ—Ä–∞": 480*3},
    "–ì–∞—Ä–∞–∂–∫–∞": {"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 3, "–¢–∏–ø": "–°4 + –†–∞–∫–µ—Ç—ã", "–°–µ—Ä–∞": 1400+2200},
    "–ú–í–ö –¥–≤–µ—Ä—å": {"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 3, "–¢–∏–ø": "–°4", "–°–µ—Ä–∞": 2200*3},
    "–¢—É—Ä–µ–ª—å": {"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 4, "–¢–∏–ø": "–°–∫–æ—Ä–æ—Å—Ç–Ω—ã–µ —Ä–∞–∫–µ—Ç—ã", "–°–µ—Ä–∞": 100*4},
}

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ ---
print("üí£ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–µ–π–¥–∞ Rust –ø–æ —Å–µ—Ä–µ")
print("=" * 40)

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–ª–∏
print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–ª–∏:")
for i, target in enumerate(raid_sulfur_table.keys(), 1):
    print(f"{i}. {target}")

print("\n" + "=" * 40)

while True:
    target = input("–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–∑—Ä—É—à–∏—Ç—å? (–≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–æ–º–µ—Ä): ").strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–≤–µ–¥–µ–Ω –ª–∏ –Ω–æ–º–µ—Ä
    if target.isdigit():
        target_num = int(target)
        if 1 <= target_num <= len(raid_sulfur_table):
            target = list(raid_sulfur_table.keys())[target_num - 1]
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ü–µ–ª–∏.")
            continue

    # –ò—â–µ–º —Ü–µ–ª—å (—Å —É—á–µ—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞)
    found_target = None
    for key in raid_sulfur_table.keys():
        if key.lower() == target.lower():
            found_target = key
            break

    if found_target:
        info = raid_sulfur_table[found_target]
        print(f"\nüîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ü–µ–ª–∏: {found_target}")
        print(f" - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä—è–¥–æ–≤: {info['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']} ({info['–¢–∏–ø']})")
        print(f" - –¢—Ä–µ–±—É–µ–º–∞—è —Å–µ—Ä–∞: {info['–°–µ—Ä–∞']} –µ–¥–∏–Ω–∏—Ü")

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–µ–ª–µ–π
        while True:
            multiplier_input = input("\n–°–∫–æ–ª—å–∫–æ —Ç–∞–∫–∏—Ö —Ü–µ–ª–µ–π —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–∑—Ä—É—à–∏—Ç—å? (—á–∏—Å–ª–æ, Enter = 1): ").strip()

            if multiplier_input == "":
                multiplier = 1
                break
            else:
                try:
                    multiplier = int(multiplier_input)
                    if multiplier <= 0:
                        print("‚ö†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.")
                        continue
                    break
                except ValueError:
                    print("‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
                    continue

        # –í—ã—á–∏—Å–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        total_charges = info['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'] * multiplier
        total_sulfur = info['–°–µ—Ä–∞'] * multiplier

        print(f"\nüßÆ –ò—Ç–æ–≥–æ –¥–ª—è {multiplier}x {found_target}:")
        print(f" - –ó–∞—Ä—è–¥–æ–≤ ({info['–¢–∏–ø']}): {total_charges}")
        print(f" - –°–µ—Ä—ã: {total_sulfur} –µ–¥–∏–Ω–∏—Ü")

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—É—Ä—Å–∞—Ö
        print(f"\n –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        if "–°4" in info['–¢–∏–ø']:
            print(f" - –ù—É–∂–Ω–æ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤: {total_charges * 20}")
            print(f" - –ù—É–∂–Ω–æ –Ω–∏–∑–∫–æ—Å–æ—Ä—Ç–Ω–æ–≥–æ —Ç–æ–ø–ª–∏–≤–∞: {total_charges * 30}")
        elif "–°–∞—á–µ–ª—å" in info['–¢–∏–ø']:
            print(f" - –ù—É–∂–Ω–æ —Ç–∫–∞–Ω–∏: {total_charges * 10}")
            print(f" - –ù—É–∂–Ω–æ –±–æ–±–æ–≤—ã—Ö –±–∞–Ω–æ–∫: {total_charges * 4}")

        break
    else:
        print("‚ùå –¢–∞–∫–æ–π —Ü–µ–ª–∏ –Ω–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ.")
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:", ", ".join(raid_sulfur_table.keys()))

print("\nüéØ –£–¥–∞—á–Ω–æ–≥–æ —Ä–µ–π–¥–∞!")
